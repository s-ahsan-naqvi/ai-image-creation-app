import React, { useState } from 'react'
import { useNavigate } from "react-router-dom";

import { preview } from "../assets";
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from "../components";

const CreatePostPage = () => {

  const navigate = useNavigate();


  const getSDImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch(`http://localhost:8080/api/make/${form.prompt}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({}),
          });
          const data = await response.json();
          setForm({ ...form, photo: `${data.photo}` });
      } catch (err) {
        alert(err)
      } finally {
        setGeneratingImg(false)
      }
    } else {
      alert('Enter valid prompt.')
    }
  }

  const handleSubmit = async (e) => {
      e.preventDefault();

      if (form.prompt && form.photo) {
        setIsLoading(true);

        try {
          const response = await fetch('http://localhost:8080/api/v1/post', {
            method: "POST",
            headers: {
              "Content-Type": 'application/json',
            },
            body: JSON.stringify({ ...form})
          })
          console.log(form);

          await response.json();
          navigate('/');
        } catch (err) {
            alert(err)
        } finally {
          setIsLoading(false);
        }

      }
}

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value })
  };

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt)
    setForm({...form, prompt: randomPrompt})
  };

  const [form, setForm] = useState({
    name: "",
    prompt: "A futuristic cyborg dance club, neon lights",
    photo: "",
  });

  const [generatingImg, setGeneratingImg] = useState(false)
  const [isLoading, setIsLoading] = useState(false)

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-inter font-extrabold text-[#222328] text-[32px]'>
            Create
        </h1>
        <p className='mt-2 text-[#666e75] text-[18px] max-w-[500px]'>
            Create stunning images generated by Stable Diffusion AI
        </p>
      </div> 

      <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          
          <FormField 
            labelName="Your Name"
            type="text"
            name="name"
            placeholder = "Your Name"
            value = {form.name}
            handleChange = {handleChange}
          />

          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="An Impressionist oil painting of sunflowers in a purple vaseâ€¦"
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div className='relative bg-gray-50 text-gray-900 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center'>
            {
              form.photo ? (
                <img 
                  src={form.photo}
                  alt={form.prompt}
                  className='w-full h-full object-contain'
                />
              ) : (
                <img 
                  src={preview}
                  alt="preview"
                  className='w-9/12 h-9/12 object-contain opacity-40'
                />
              )
            }

            {generatingImg && (
              <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg">
                <Loader />
              </div>
            )}
          </div>

        </div>

        <div className='mt-5 flex gap-5'>
          <button 
            type='button'
            onClick={getSDImage}
            className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5'
          >
          {generatingImg ? "Generating..." : "Generate"}
          </button>
        </div>

        <div className='mt-10'>
          <p className='mt-2 text-[#666e75] text-[14px]'>
            Once you have generated an image you may share it with others in the community.
          </p>
          <button 
            type='submit'
            className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'
          >
          {isLoading ? "Sharing.." : "Share with the community"}
          </button>

        </div>
      </form>
    </section>
    )
}

export default CreatePostPage