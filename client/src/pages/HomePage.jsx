import React, { useState, useEffect } from 'react'
import { Card, Loader, FormField } from '../components'

const RenderCards = ({data, title}) => {
    if (data?.length > 0){
        return data.map( (post) => <Card key={post._id} {...post} /> )
    }

    return (
        <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>
            {title}
        </h2>
    )
}

const HomePage = () => {

    const [loading, setLoading] = useState(false);
    const [allPosts, setAllPosts] = useState([]);

    const [searchText, setSearchText] = useState('');
    const [searchedResults, setSearchedResults] = useState(null);
    const [searchTimeout, setSearchTimeout] = useState(null);

    const handleSearchChange = (e) => {
        clearTimeout(searchTimeout);
        setSearchText(e.target.value);

        setSearchTimeout(
            setTimeout(() => {
                const searchResults = allPosts.filter((item) => 
                    item.name.toLowerCase().includes(searchText.toLowerCase()) || 
                    item.prompt.toLowerCase().includes(searchText.toLowerCase()));
    
                    setSearchedResults(searchResults);
            }, 500)
        )

    }

    const fetchPosts = async () => {
        setLoading(true);
    
        try {
          const response = await fetch('http://localhost:8080/api/v1/post', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          });
    
          if (response.ok) {
            const result = await response.json();
            setAllPosts(result.data.reverse());
          }
        } catch (err) {
          alert(err);
        } finally {
          setLoading(false);
        }
      };
    
      useEffect(() => {
        fetchPosts();
      }, []);

  return (
    <section className=' max-w-7xl mx-auto'>
        <div>
            <div className='flex justify-center item-center flex-col my-14'>
                <h1 className='text-center font-inter font-extrabold text-[#222328] text-[40px]'>
                    Imagen
                </h1>
                <h2 className='font-inter font-extrabold text-[#3f4d96] text-[28px] text-center lg:px-44'>
                    Generate and share images created through the Stable Diffusion Imagine API 
                </h2>
            </div>

            <h2 className='font-inter font-extrabold text-[#222328] text-[28px]'>
                The Community Showcase
            </h2>
            <p className='mt-2 text-[#666e75] text-[18px] max-w-[500px]'>
                Browse through a diverse collection of stunning images generated by Stable Diffusion AI
            </p>
            <div className='mt-16'>
                <FormField
                    labelName='Search Posts'
                    type='text'
                    name='text'
                    placeholder='Search posts'
                    value={searchText}
                    handleChange={handleSearchChange}
                />
            </div>
            <div className='10'>
                {loading ?
                    (<div className='flex justify-center items-center'>
                        <Loader/>
                    </div>) : (
                        <>
                            {searchText && 
                            
                            <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                                Showing results for <span className='text-[#222328]'>{searchText}</span>
                            </h2>

                            }
                        </>
                    )
                 }
            </div>
            <div className='mt-10'>
            </div>
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                 {
                    searchText ? (
                        <RenderCards 
                            data = {searchedResults}
                            title = "No search results found."
                         />
                    ) : ( 
                        <RenderCards  
                            data = {allPosts}
                            title = "No posts found." 
                        />
                    )
                 }
            </div>
        </div>
    </section>
  )
}

export default HomePage